// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String         @id @default(uuid())
  name        String
  barcode     String         @unique
  costPrice   Decimal        @db.Decimal(10, 2)
  sellPrice   Decimal        @db.Decimal(10, 2)
  imagePath   String?
  status      ProductStatus  @default(ACTIVE)
  isOrdered   Boolean        @default(false)
  tags        String[]       // 分類標籤陣列
  vendors     String[]       // 廠商ID陣列
  note        String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  

  // Relations
  orderItems OrderItem[]
  
  @@map("products")
}

enum ProductStatus {
  ACTIVE      // 正常
  OUT_OF_STOCK // 缺貨
  DISCONTINUED // 停售
}

model Order {
  id        String      @id @default(uuid())
  note      String?
  createdAt DateTime    @default(now())
  
  // Relations
  items     OrderItem[]
  
  @@map("orders")
}

model OrderItem {
  id        String   @id @default(uuid())
  quantity  Int  
  // Relations
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  
  @@map("order_items")
}

model Vendor {
  id        String    @id
  name      String    @unique
  @@map("vendors")
}
